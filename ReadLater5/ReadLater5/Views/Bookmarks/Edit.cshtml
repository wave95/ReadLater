@model Models.BookmarkModel

@{
    ViewBag.Title = "Edit";
}

<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/lib/chosen/chosen.jquery.js"></script>
<script src="~/lib/chosen/chosen.proto.js"></script>

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Category</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.URL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.URL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.URL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.CategoriesList, "ID", "Name"), "Select category", new { @class = "form-control chosen-select", id = "ddCategories" })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                <button type="button" class="btn btn-primary form-control" data-toggle="ajax-modal" data-target="#addCategory"
                        data-url="@Url.Action("Add", "Categories")">
                    Add Category
                </button>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">

    $(function () {
        var ModalPlaceHolderElement = $('#ModalPlaceHolder');
        $('[data-toggle="ajax-modal"]').click(function (event) {

            var url = $(this).data('url');
            $.get(url).done(function (data) {
                ModalPlaceHolderElement.html(data);
                ModalPlaceHolderElement.find('#addCategory').modal('show');
            })

        })

        ModalPlaceHolderElement.on('click', '[data-save="modal"]', function (event) {

            var form = $(this).parents('.modal').find('form');
            var actionUrl = form.attr('action');
            var sendData = form.serialize();
            $.post('@Url.Action("Create", "Categories")', sendData).done(function (data) {
                ModalPlaceHolderElement.find('.modal').modal('hide');

                var ddl = $("#ddCategories");

                $.ajax({
                    url: '@Url.Action("Get", "Categories")',
                    type: 'Get',
                    success: function (data) {
                        ddl.html("");
                        ddl.append(new Option("Select category", ""));
                        for (var i = 0; i < data.length; i++) {
                            ddl.append(new Option(data[i].name, data[i].id));
                        }
                        ddl.trigger("chosen:updated");
                    },
                    error: function (er) {
                        console.error(er);
                    }
                });
            })
        })
    });


    $('#addCategory').on('shown', function () {
        $(document).off('focusin.modal');

    });

</script>